name: updateclitest
on:
  pull_request:
  workflow_dispatch:
permissions:
  id-token: write
  contents: write
  pull-requests: write
  issues: write
jobs:
  updatecli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - name: Install Updatecli in the runner
        uses: updatecli/updatecli-action@v2
        with:
          version: v0.38.0
      - name: Download Pluto
        uses: FairwindsOps/pluto/github-action@master
      - name: Install YQ
        uses: mikefarah/yq@master
      - name: Run Updatecli in Dry Run mode
        run: |
          yq -r '.environments | to_entries | map(select(.value.enabled == true)) | .[].key' ./updatecli/values.github-action.yaml | while read i
          do
              CURRENT_ITER_ENVIRONMENT="$i" updatecli diff --config ./updatecli/updatecli.d --values ./updatecli/values.github-action.yaml
          done
        env:
          UPDATECLI_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Updatecli in Apply mode
        # if: github.ref == 'refs/heads/main'
        run: |
          yq -r '.environments | to_entries | map(select(.value.enabled == true)) | .[].key' updatecli/values.github-action.yaml | while read i
          do
              CURRENT_ITER_ENVIRONMENT="$i" updatecli apply --config ./updatecli/updatecli.d --values ./updatecli/values.github-action.yaml
          done
        env:
          UPDATECLI_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Print GITHUB_WORKSPACE
        run: echo ${GITHUB_WORKSPACE}
      - name: Find Pull Request
        uses: juliangruber/find-pull-request-action@v1
        id: find-pull-request
        with:
          branch: updatecli_aks_version_sbox
      - run: echo "Pull Request ${number} (${sha})"
        env:
          number: ${{ steps.find-pull-request.outputs.number }}
          sha: ${{ steps.find-pull-request.outputs.head-sha }}
      - name: run pluto 
        id: pluto
        shell: bash 
        run: |
          bash ./.github/get-deprecations.sh > output.txt
      - name: print 
        uses: pCYSl5EDgo/cat@master
        id: coverage
        with:
          path: ./output.txt
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Pluto Output: ${{steps.coverage.outputs.text}}
          pr_number: steps.find-pull-request.outputs.number # This will comment on pull request #123